/* ---------------------------------------
	Typography
--------------------------------------- */

html {
	// Specify provided design width (psd, xd template full width), NOT container
	$design-width: 1440;
	// Use this static value if default column gap (32px) fits you design.
	font-size: 16 / $design-width * 100vw;

	
	// Use dynamic font size to prevent Mozilla FF columns wrap
	/*
	$step-size: $design-width - 1025;
	@for $i from 1 through 30 {
		$size: 1000 + 100 * $i + (floor($i / 10) * 100 * ceil($i / 10) );
		@include breakpoint($size) {
			font-size: round(16px / $design-width * $size);
		}
	}*/
	
	@include breakpoint(xlarge down) {
		font-size: round(18px / $design-width * 1440); // Increases site size on 1201-1440px. make sure site is not braking on this resolutions 
	}

	@include breakpoint(large down) {
		font-size: round(20px / $design-width * 1200); // Increases site size on 1025-1200px. make sure site is not braking on this resolutions 
	}

	@include breakpoint(small down) {
		font-size: 16px;
	}
}

body {
	font-size: rem-calc(14);
	font-family: $proxima-font;
	font-weight: 400;
}

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
	a {
		color: inherit;
	}
}

h1, .h1, .has-h-1-font-size {
	/*basic heading styles*/
	color: $text-color;
}

h2, .h2, .has-h-2-font-size {
	/*basic heading styles*/
	color: $main-color;
}

h3, .h3, .has-h-3-font-size {
	/*basic heading styles*/
	color: $black;
	font-weight: 700;
}

h4, .h4, .has-h-4-font-size {
	/*basic heading styles*/
	color: $black;
}

h5, .h5, .has-h-5-font-size {
	/*basic heading styles*/
	color: $black;
}

h6, .h6, .has-h-6-font-size {
	/*basic heading styles*/
	color: $text-color;
}

p {
	/*basic paragraph styles*/
	&:empty {
		display: none;
	}

	a {
		text-decoration: underline;
	}
}

ul {
	/*basic list styles*/
	font-size: inherit;

	li {
		/*basic list-item styles*/
	}
}

ul, ol {
	list-style-position: inside;
}

blockquote {

}

address {
	margin-bottom: $global-margin;
	font-style: normal;
}

a {
	color: $text-color;
	transition: all 0.2s ease-in-out;

	&:hover, &:focus {
		/*basic hover and focus effects*/
		color: darken($main-color, 20);
	}
}

a, button, .button, input[type='submit'], input[type='reset'], input[type='button'] {
	// Change opacity to 0.5 and color by client request. 
	-webkit-tap-highlight-color: rgba(invert($main-color), 0.5) !important;
}

/* ---------------------------------------
	Forms/Inputs
--------------------------------------- */

.no-outline {
	button, a, [tabindex] {
		outline: none;
	}
}

/* Placeholder styling */

input, textarea {
	&::placeholder {
		opacity: 1;
	}
}

/* Input Styling */
:root {
	--input-height: #{($input-font-size * unitless-calc($input-line-height, $input-font-size)) + (get-side($input-padding, 'top') + get-side($input-padding, 'bottom')) + rem-calc(get-border-value($input-border, 'width') * 2)};
}

[type=color],
[type=date],
[type=datetime-local],
[type=datetime],
[type=email],
[type=month],
[type=number],
[type=password],
[type=search],
[type=tel],
[type=text],
[type=time],
[type=url],
[type=week],
textarea,
select,
.ui-selectmenu-button,
body .select2-container .select2-selection {
	/* STYLES GO THERE */
	height: var(--input-height);
	margin-bottom: 0;
}

select:not([multiple]),
.ui-selectmenu-button:not([multiple]) {
	padding: $input-padding;
	padding-right: rem-calc(32);
}


/* ---------------------------------------
	Select 2
--------------------------------------- */
body {
	.select2 {
		font-weight: 300;
		text-align: left;
		width: 100% !important;
	}

	.select2:focus {
		outline: none;
	}

	.select2-dropdown {
		padding: 0;
		border: $input-border;
		border-radius: 0 0 $global-radius $global-radius;
		background-color: #fff;
		font-size: rem-calc(14);

		li {
			margin: 0;
			padding: 0 rem-calc(10);
			font-size: rem-calc(14);
			line-height: 1.86;
			transition: all 0.15s ease-in;

			&:hover {
				background: #ededed;
			}
		}
	}

	.select2-container {
		.select2-selection{
			margin: 0;
			padding: $input-padding;
			border: $input-border;
			border-radius: $input-radius;
			font-size: $input-font-size;
			line-height: normal;

			&--single {
				height: var(--input-height);

				.select2-selection__rendered {
					padding: 0;
					color: $input-color;
					line-height: $input-line-height;
				}

				.select2-selection__placeholder {
					color: $input-placeholder-color;
				}

				.select2-selection__clear {
					margin-right: rem-calc(8);
				}

				.select2-selection__arrow {
					top: 50%;
					right: rem-calc(10);
					width: auto;
					height: auto;
					font-size: rem-calc(12);
					line-height: 1;
					transform: translateY(-50%);

					@include breakpoint(xlarge) {
						&::after, &::before {
							right: rem-calc(32);
						}
					}

					&::after {
						content: '\f078';
						color: $input-color;
						font-family: $fa;

						font-weight: 900;
					}

					b {
						display: none;
					}
				}

			}

			&--multiple {
				min-height: var(--input-height);
				height: auto;

				.select2-selection__rendered{
					line-height: $input-line-height;
					padding: 0;
					margin: rem-calc(-2);
					display: block;

					li {
						margin: rem-calc(2);
					}
				}

				// Single choice in multiselect mode
				.select2-selection__choice {
					border-radius: 0;
					padding: rem-calc(0 2);
					box-shadow: inset 0 0 0 1px $medium-gray;
					background-color: $light-gray;
				}

				.select2-search__field {
					height: auto;
					font-size: inherit;
					line-height: inherit;
				}
			}
		}

		&--default {
			.select2-results__option {
				&--highlighted[aria-selected],
				&--highlighted[data-selected],
				&[aria-selected=true],
				&[data-selected=true] {
					background: #ededed;
					color: $text-color;
				}
			}

			&.select2-container--focus {
				.select2-selection{
					outline: none;
					background-color: $input-background-focus;
					border: $input-border-focus;
				}
			}
		}

		&--open {
			.select2-dropdown--below {
				border-top: $input-border;
			}

			.select2-selection__arrow {
				&::after {
					content: '\f077' !important;
				}
			}
		}
	}

	.select2-dropdown .select2-search--dropdown .select2-search__field {
		height: auto;
		padding: rem-calc(4 10);
	}
}

textarea[rows] {
	/*Styles for TextArea*/
	max-width: 100%;
	height: rem-calc(160);
}

[type=number] {
	-moz-appearance: textfield;
}

[type=number]{
	-moz-appearance:textfield;
	
	&::-webkit-inner-spin-button,
	&::-webkit-outer-spin-button {
		margin: 0;
		-webkit-appearance: none;
	}
}

.number-box{
	position: relative;
	display: inline-block;
	min-width: rem-calc(64);
	
	input {
		width: 100%;
		padding-right: rem-calc(20) !important;
	}
}

.number-box__control{
	position: absolute;
	right: rem-calc(8);
	font-size: rem-calc(16);
	cursor: pointer;
	line-height: 0.75;
	height: 0.75em;
	
	&--inc {
		top: rem-calc(6);
	}
	
	&--dec {
		bottom: rem-calc(6);
	}
}

[type=checkbox],
[type=file],
[type=radio] {
	margin-bottom: 0;
}

/*
// Custom checkbox / radio input style

$checkbox-size: var(--checkbox-size, 1rem); 

[type=checkbox], [type=radio] {
  @extend %css-clip;

  + * {
    display: block;
    position: relative;
    margin-right: 0;
    margin-left: 0;
	  padding-left: calc(#{$checkbox-size} + #{rem-calc(8)});
    line-height: 1.4;
    letter-spacing: 0;
    text-transform: none;
    font-size: 1.125rem;
    color: inherit;
    font-weight: 500;
    border: none;
    width: auto;
    height: auto;

    &:before {
      content: '';
      position: absolute;
      top: 50%;
      left: 0;
      width: $checkbox-size;
      height: $checkbox-size;
      margin-top: calc(#{$checkbox-size} / -2);
      border: 1px solid #777;
      background-color: #fff;
    }

    &:after {
      position: absolute;
      top: 50%;
      left: calc(#{$checkbox-size} / 6);
      color: $white;
      font-family: $fa;
      font-size: calc(#{$checkbox-size} * 2 / 3);
      font-weight: 900;
      line-height: 1;
      transform: translateY(-50%);
      width: auto;
      height: auto;
      border: none;
    }
  }

  &:checked + * {

    &::before {
      background-color: $white;
      border-color: $black;
    }

    &:after {
      content: '\f00c';
    }
  }

  &:focus + * {
    outline: none;
  }
}

[type=radio] {
  + *  {
    &::before {
      border-radius: 50%;
    }
  }

  &:checked + * {
    &::before {
      background-color: $white;
    }

    &:after {
      content: '';
      left: calc(#{$checkbox-size} / 4);
      width: calc(#{$checkbox-size} / 2);
      height: calc(#{$checkbox-size} / 2);
      border-radius: 50%;
      background-color: $black;
    }
  }
}
*/

button, .button, input[type='submit'], input[type='reset'], input[type='button'] {
	border-width: $button-hollow-border-width;
	text-decoration: none;
	transition: all 0.2s ease-in-out;

	&:hover, &:focus {

	}

	&.hollow {
		&:hover, &:focus {
			
		}
	}
}

/* Button additional styles */

.button {
	&:hover, &:focus {
		/*basic hover and focus effects*/
	}
}